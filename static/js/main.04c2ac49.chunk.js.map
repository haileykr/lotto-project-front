{"version":3,"sources":["components/lotto/Header.jsx","components/lotto/lotto-box/LottoBoxComponentStyles.jsx","components/lotto/lotto-box/LottoBoxComponent.js","components/lotto/LatestNumbers.jsx","components/lotto/LottoRandomContent.jsx","components/lotto/LottoChart.jsx","components/LottoRandomTemplate.jsx","App.js","reportWebVitals.js","index.js"],"names":["HeaderContainer","styled","div","LogoBox","ButtonContainer","Button","button","HelloBox","Icon","today","Date","toLocaleDateString","timezone","Header","rel","href","target","LottoBox","LottoBoxNumber","LottoBoxPlus","LottoBoxComponent","lottoNumber","numbers","slice","b_number","length","map","n","i","LatestNumbersBox","LottoRandomHeader","useState","setLottoNumber","setDrwNo","latestWeek","setLatestWeek","useEffect","week","t1","dff","getTime","parseInt","getWeek","axios","then","res","console","log","data","nums","push","number1","number2","number3","number4","number5","number6","numberBon","LottoRandomContentBox","RandomButton","LottoRandomContent","lottoNumbers","setLottoNumbers","handleButtonClick","useCallback","newNumber","Math","floor","random","includes","sort","a","b","onClick","LottoChartContainer","InputsContainer","BarChartBox","LottoChart","toISOString","lottoAll","setLottoAll","fromDate","setFromDate","toDate","setToDate","onClickCount","range","from","to","records","sorted","labels","counts","datasets","label","backgroundColor","borderColor","borderWidth","type","id","name","min","onChange","e","value","options","scales","yAxes","ticks","beginAtZero","LottoRandomTemplateBox","LottoRandomTemplate","LatestNumbers","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.04c2ac49.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst HeaderContainer = styled.div`\r\n  width: 100%;\r\n  margin: 0;\r\n  margin-bottom: 1rem;\r\n  height: 80px;\r\n  display: flex;\r\n  align-items: center;\r\n  position: fixed;\r\n  top: 0;\r\n  padding: 0;\r\n  background-color: white;\r\n  h1 {\r\n    margin-left: 2rem;\r\n  }\r\n`;\r\nconst LogoBox = styled.div`\r\n  width: 80px;\r\n  height: 100%;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  font-size: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  color: #f6f4d2;\r\n  background-color: #d4e09b;\r\n`;\r\nconst ButtonContainer = styled.div`\r\n  margin-left: auto;\r\n`;\r\nconst Button = styled.button`\r\n  border-radius: 5px;\r\n  background-color: #d4e09b;\r\n  color: #6d735c;\r\n  height: 50px;\r\n  border: none;\r\n  padding: 1rem;\r\n  font-style: italic;\r\n  &:hover {\r\n    background-color: #6d735c;\r\n    color: #d4e09b;\r\n  }\r\n  transition: 0.5s;\r\n  cursor: pointer;\r\n`;\r\nconst HelloBox = styled.div`\r\n  width: 205px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin-left: 1rem;\r\n  margin-right: 1rem;\r\n  div {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n  span {\r\n    color: #a6acbe;\r\n  }\r\n`;\r\nconst Icon = styled.div`\r\n  width: 20px;\r\n  border-radius: 50%;\r\n  background-color: #d4e09b;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 1rem;\r\n  margin-left: 0.5rem;\r\n`;\r\nconst today = new Date().toLocaleDateString(\"ko-KR\", {\r\n  timezone: \"Asia/Seoul\",\r\n});\r\n\r\nconst Header = () => {\r\n  return (\r\n    <HeaderContainer>\r\n      <LogoBox>L</LogoBox>\r\n      <h1>Lot(t)o.f(or).fun</h1>\r\n      <ButtonContainer>\r\n        <a\r\n          rel=\"noreferrer noopener\"\r\n          href=\"https://dhlottery.co.kr/gameResult.do?method=byWin\"\r\n          target=\"_blank\"\r\n        >\r\n          <Button>âœŒ Go to Official Lotto Website</Button>\r\n        </a>\r\n      </ButtonContainer>\r\n      <HelloBox>\r\n        <div>\r\n          Hello, Friend!\r\n          <span>{today}</span>\r\n        </div>\r\n        <Icon>ðŸ¦„</Icon>\r\n      </HelloBox>\r\n    </HeaderContainer>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const LottoBox = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const LottoBoxNumber = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border: none;\r\n  margin: 1rem;\r\n  text-align: center;\r\n  font-size: 2rem;\r\n  padding: 1rem;\r\n  border-radius: 50%;\r\n  box-shadow: rgba(255, 255, 255, 0.17) 0px -23px 25px 0px inset, rgba(255, 255, 255, 0.15) 0px -36px 30px 0px inset, rgba(255, 255, 255, 0.1) 0px -79px 40px 0px inset, rgba(255, 255, 255, 0.06) 0px 2px 1px, rgba(255, 255, 255, 0.09) 0px 4px 2px, rgba(255, 255, 255, 0.09) 0px 8px 4px, rgba(255, 255, 255, 0.09) 0px 16px 8px, rgba(255, 255, 255, 0.09) 0px 32px 16px ;\r\n  background-color: #69C8F2;\r\n  &:first-child {\r\n    background-color: #FBC400;\r\n  }\r\n  &:nth-child(2) {\r\n    background-color: #69C8F2;\r\n  }\r\n  &:nth-child(3) {\r\n    background-color: #FF7272;\r\n  }\r\n  &:nth-child(4) {\r\n    background-color: #AAAAAA;\r\n  }\r\n  &:nth-child(5) {\r\n    background-color: #B0D840;\r\n  }\r\n  &:nth-child(6) {\r\n    background-color: #FBC400;\r\n  }\r\n`;\r\n\r\nexport const LottoBoxPlus = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: 8px;\r\n  text-align: center;\r\n  font-size: 30px;\r\n`;\r\n","import React from \"react\";\r\nimport  {LottoBox, LottoBoxNumber, LottoBoxPlus} from \"./LottoBoxComponentStyles.jsx\";\r\n\r\nconst LottoBoxComponent = ({ lottoNumber }) => {\r\n  const numbers = lottoNumber.slice(0, 6);\r\n  const b_number = lottoNumber[6];\r\n\r\n  return (\r\n    <>\r\n        {lottoNumber.length > 0 ?\r\n            (\r\n                <LottoBox>\r\n                    {numbers.map((n, i) => (\r\n                        <LottoBoxNumber key={i}>\r\n                            {n}\r\n                        </LottoBoxNumber>\r\n                    ))}\r\n                    <LottoBoxPlus>+</LottoBoxPlus>\r\n                    <LottoBoxNumber>\r\n                        {b_number}\r\n                    </LottoBoxNumber>\r\n                </LottoBox>\r\n            )\r\n        :\r\n        (<h1>Server Temporarily Not Available</h1>)\r\n\r\n\r\n        }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LottoBoxComponent;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as axios from \"axios\";\r\nimport LottoBoxComponent from \"./lotto-box/LottoBoxComponent\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LatestNumbersBox = styled.div`\r\n  margin-top: 100px;\r\n  text-align: center;\r\n  width: 90%;\r\n  height: 170px;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\r\n  h2 {\r\n    border-bottom: 1px solid #eef0f6;\r\n    text-align: start;\r\n    padding-left: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst LottoRandomHeader = () => {\r\n  const [lottoNumber, setLottoNumber] = useState([]);\r\n  const [drwNo, setDrwNo] = useState(0);\r\n  const [latestWeek, setLatestWeek] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const getWeek = () => {\r\n      const t1 = new Date(\"December, 7, 2002\");\r\n      const t2 = new Date();\r\n      const dff = t2.getTime() - t1.getTime();\r\n      return parseInt(dff / (24 * 3600 * 1000 * 7)) + 1;\r\n    };\r\n    let week = getWeek();\r\n\r\n    setLatestWeek(week);\r\n\r\n    axios.get(\"http://localhost:5000/latest\").then((res) => {\r\n      console.log(res);\r\n      const data = res.data;\r\n      console.log(data);\r\n      if (data) {\r\n        const nums = [];\r\n        nums.push(data.number1);\r\n        nums.push(data.number2);\r\n        nums.push(data.number3);\r\n        nums.push(data.number4);\r\n        nums.push(data.number5);\r\n        nums.push(data.number6);\r\n        nums.push(data.numberBon);\r\n        setLottoNumber(nums);\r\n        setDrwNo(data.numberBon);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <LatestNumbersBox>\r\n      <h2>Latest Numbers from Week {latestWeek}</h2>\r\n      <LottoBoxComponent lottoNumber={lottoNumber} />\r\n    </LatestNumbersBox>\r\n  );\r\n};\r\n\r\nexport default LottoRandomHeader;\r\n","import React, { useState, useCallback } from \"react\";\r\nimport LottoBoxComponent from \"./lotto-box/LottoBoxComponent\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LottoRandomContentBox = styled.div`\r\n  margin-top: 50px;\r\n  margin-bottom: 100px;\r\n  width: 90%;\r\n  height: 800px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\r\n  background-color: white;\r\n  overflow: scroll;\r\n  h2 {\r\n    border-bottom: 1px solid #eef0f6;\r\n    text-align: start;\r\n    padding-left: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\nconst RandomButton = styled.button`\r\n  max-width: 100px;\r\n  margin-left: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 15px;\r\n  border: none;\r\n  color: white;\r\n  cursor: pointer;\r\n  background-color: #d4e09b;\r\n`;\r\n\r\nconst LottoRandomContent = () => {\r\n  const [lottoNumbers, setLottoNumbers] = useState([]);\r\n  const handleButtonClick = useCallback(() => {\r\n    const lottoNumber = [];\r\n    while (lottoNumber.length < 7) {\r\n      const newNumber = Math.floor(Math.random() * 45) + 1;\r\n      if (!lottoNumber.includes(newNumber)) {\r\n        lottoNumber.push(newNumber);\r\n      }\r\n    }\r\n    lottoNumber.sort((a, b) => a - b);\r\n    setLottoNumbers([...lottoNumbers, lottoNumber]);\r\n  }, [lottoNumbers]);\r\n\r\n  return (\r\n    <LottoRandomContentBox>\r\n      <h2>Generate Random Numbers!</h2>\r\n      {lottoNumbers.map((lottoNumber, i) => (\r\n        <LottoBoxComponent key={i} lottoNumber={lottoNumber} />\r\n      ))}\r\n      <RandomButton onClick={handleButtonClick}>Generate!</RandomButton>\r\n    </LottoRandomContentBox>\r\n  );\r\n};\r\n\r\nexport default LottoRandomContent;\r\n","import React, { useCallback, useState } from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LottoChartContainer = styled.div`\r\n  margin-top: 50px;\r\n  text-align: center;\r\n  width: 90%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  border-radius: 10px;\r\n  background-color: white;\r\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 12px;\r\n  h2 {\r\n    border-bottom: 1px solid #eef0f6;\r\n    text-align: start;\r\n    padding-left: 1rem;\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst InputsContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  padding: 1rem;\r\n  font-size: 1rem;\r\n`;\r\n\r\nconst BarChartBox = styled.div`\r\n  padding: 1rem;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst LottoChart = () => {\r\n  const today = new Date().toISOString();\r\n  const [lottoAll, setLottoAll] = useState(null);\r\n  const [fromDate, setFromDate] = useState(\"2002-12-07T00:00:00.000Z\");\r\n  const [toDate, setToDate] = useState(today);\r\n\r\n  const onChangeFrom = (e) => {\r\n    setFromDate(`${e.target.value}T00:00:00.000Z`);\r\n  };\r\n\r\n  const onChangeTo = (e) => {\r\n    setToDate(`${e.target.value}T23:59:59.000Z`);\r\n  };\r\n\r\n  const onClickCount = useCallback(async () => {\r\n    const range = {\r\n      from: fromDate,\r\n      to: toDate,\r\n    };\r\n    console.log(range);\r\n    const records = await axios.post(\r\n      \"http://localhost:5000/number-counts\",\r\n      range\r\n    );\r\n\r\n    console.log(records);\r\n    const sorted = records.data.sort((a, b) => b[1] - a[1]);\r\n    console.log(records.data);\r\n    setLottoAll(sorted);\r\n  }, [fromDate, toDate]);\r\n\r\n  let labels = [];\r\n  let counts = [];\r\n  if (lottoAll) {\r\n    labels = lottoAll.map((i) => i[0]);\r\n    counts = lottoAll.map((i) => i[1]);\r\n  }\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Lotto Numbers\",\r\n        data: counts,\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const options = { scales: { yAxes: [{ ticks: { beginAtZero: true } }] } };\r\n\r\n  return (\r\n    <>\r\n      <LottoChartContainer>\r\n        <h2>Number Statistics </h2>\r\n        <InputsContainer>\r\n          <input\r\n            type=\"date\"\r\n            id=\"from\"\r\n            name=\"from\"\r\n            min=\"2002-12-07\"\r\n            onChange={onChangeFrom}\r\n          />\r\n          <input\r\n            type=\"date\"\r\n            id=\"to\"\r\n            name=\"to\"\r\n            min=\"2002-12-07\"\r\n            onChange={onChangeTo}\r\n          />\r\n          <button onClick={onClickCount}>Click! </button>\r\n        </InputsContainer>\r\n        <BarChartBox>\r\n          <Bar data={data} options={options} />\r\n        </BarChartBox>\r\n      </LottoChartContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LottoChart;\r\n","import React, { Component } from \"react\";\r\nimport Header from \"./lotto/Header\";\r\nimport LatestNumbers from \"./lotto/LatestNumbers\";\r\nimport LottoRandomContent from \"./lotto/LottoRandomContent\";\r\nimport styled from \"styled-components\";\r\nimport LottoChart from \"./lotto/LottoChart\";\r\n\r\nconst LottoRandomTemplateBox = styled.div`\r\n  margin: auto;\r\n  width: auto;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: #f8f8fb;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nclass LottoRandomTemplate extends Component {\r\n  render() {\r\n    return (\r\n      <LottoRandomTemplateBox>\r\n        <Header />\r\n        <LatestNumbers />\r\n        <LottoChart />\r\n        <LottoRandomContent />\r\n      </LottoRandomTemplateBox>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LottoRandomTemplate;\r\n","import React, {Component} from 'react'\nimport LottoRandomTemplate from './components/LottoRandomTemplate'\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n      <LottoRandomTemplate/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}