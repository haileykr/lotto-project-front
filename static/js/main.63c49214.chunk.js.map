{"version":3,"sources":["components/lotto/lotto-box/LottoBoxComponentStyles.jsx","components/lotto/lotto-box/LottoBoxComponent.js","components/lotto/LottoRandomHeader.jsx","components/lotto/LottoRandomContent.jsx","components/lotto/LottoChart.jsx","components/LottoRandomTemplate.jsx","App.js","reportWebVitals.js","index.js"],"names":["LottoBox","styled","div","LottoBoxNumber","LottoBoxPlus","LottoBoxComponent","lottoNumber","numbers","slice","b_number","length","map","n","i","LottoRandomHeaderBox","LottoRandomHeader","useState","setLottoNumber","setDrwNo","latestWeek","setLatestWeek","useEffect","week","t1","Date","dff","getTime","parseInt","getWeek","axios","then","res","console","log","data","nums","push","number1","number2","number3","number4","number5","number6","numberBon","marginStyle","useMemo","marginRight","style","LottoRandomContentBox","RandomButton","button","LottoRandomContent","lottoNumbers","setLottoNumbers","handleButtonClick","useCallback","newNumber","Math","floor","random","includes","sort","a","b","onClick","LottoChartContainer","LottoChart","today","toISOString","lottoAll","setLottoAll","fromDate","setFromDate","toDate","setToDate","onClickCount","range","from","to","records","sorted","labels","counts","datasets","label","backgroundColor","borderColor","borderWidth","type","id","name","min","onChange","e","target","value","options","scales","yAxes","ticks","beginAtZero","LottoRandomTemplateBox","LottoRandomMain","LottoRandomTemplate","className","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.63c49214.chunk.js","sourcesContent":["\r\nimport styled from 'styled-components';\r\n\r\nexport const LottoBox = styled.div`\r\n    display: flex;\r\n    margin: 20px;\r\n    padding-left: 25px;\r\n`;\r\n\r\nexport const LottoBoxNumber = styled.div`    width: 40px;\r\n    height: 40px;\r\n    border: none;\r\n    margin-left: 1rem;\r\n    margin-right: 1rem;\r\n    text-align: center;\r\n    font-size: 2rem;\r\n    padding: 1rem;\r\n    border-radius: 50%;\r\n\r\n    background-color: #90e0ef;\r\n\r\n    &:first-child {\r\n\r\n        background-color: #ffadad;\r\n    }\r\n\r\n    &:nth-child(2){\r\n\r\n        background-color: #fdffb6;\r\n    }\r\n\r\n    &:nth-child(3){\r\n\r\n        background-color: #caffbf;\r\n    }\r\n\r\n    &:nth-child(4){\r\n        background-color:#a0c4ff;\r\n    }\r\n    &:nth-child(5){\r\n        background-color: #bdb2ff;\r\n    }\r\n    &:nth-child(6){\r\n\r\n        background-color: #ffc6ff;\r\n    }\r\n`;\r\n\r\nexport const LottoBoxPlus = styled.div`\r\n    width: 40px;\r\n    height: 40px;\r\n    margin: 8px;\r\n    text-align: center;\r\n    font-size: 30px;\r\n`;","import React from \"react\";\r\nimport  {LottoBox, LottoBoxNumber, LottoBoxPlus} from \"./LottoBoxComponentStyles.jsx\";\r\n\r\nconst LottoBoxComponent = ({ lottoNumber }) => {\r\n  const numbers = lottoNumber.slice(0, 6);\r\n  const b_number = lottoNumber[6];\r\n\r\n  return (\r\n    <>\r\n        {lottoNumber.length > 0 ?\r\n            (\r\n                <LottoBox>\r\n                    {numbers.map((n, i) => (\r\n                        <LottoBoxNumber key={i}>\r\n                            {n}\r\n                        </LottoBoxNumber>\r\n                    ))}\r\n                    <LottoBoxPlus>+</LottoBoxPlus>\r\n                    <LottoBoxNumber>\r\n                        {b_number}\r\n                    </LottoBoxNumber>\r\n                </LottoBox>\r\n            )\r\n        :\r\n        (<h1>Server Temporarily Not Available</h1>)\r\n\r\n\r\n        }\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LottoBoxComponent;\r\n","import React, { useMemo, useEffect, useCallback, useState } from \"react\";\r\nimport * as axios from \"axios\";\r\nimport LottoBoxComponent from \"./lotto-box/LottoBoxComponent\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst LottoRandomHeaderBox = styled.div`\r\n  margin-top: 50px;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid #aeaeae;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst LottoRandomHeader = () => {\r\n  const [lottoNumber, setLottoNumber] = useState([]);\r\n  const [drwNo, setDrwNo] = useState(0);\r\n  const [latestWeek, setLatestWeek] = useState(-1);\r\n\r\n  useEffect(() => {\r\n    const getWeek = () => {\r\n      const t1 = new Date(\"December, 7, 2002\");\r\n      const t2 = new Date();\r\n      const dff = t2.getTime() - t1.getTime();\r\n      return parseInt(dff / (24 * 3600 * 1000 * 7));\r\n    };\r\n    let week = getWeek();\r\n\r\n    setLatestWeek(week);\r\n\r\n    axios.get(\"http://localhost:5000/latest\").then((res) => {\r\n      console.log(res);\r\n      const data = res.data;\r\n      console.log(data);\r\n      if (data) {\r\n        const nums = [];\r\n\r\n        nums.push(data.number1);\r\n        nums.push(data.number2);\r\n        nums.push(data.number3);\r\n        nums.push(data.number4);\r\n        nums.push(data.number5);\r\n        nums.push(data.number6);\r\n\r\n        nums.push(data.numberBon);\r\n        setLottoNumber(nums);\r\n        setDrwNo(data.numberBon);\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const marginStyle = useMemo(() => ({ marginRight: \"1rem\" }));\r\n\r\n  return (\r\n    <LottoRandomHeaderBox>\r\n      <h2 style={marginStyle}>\r\n        Latest Numbers <br /> from Week {latestWeek}\r\n      </h2>\r\n      <LottoBoxComponent lottoNumber={lottoNumber} />\r\n    </LottoRandomHeaderBox>\r\n  );\r\n};\r\n\r\nexport default LottoRandomHeader;\r\n","import React, { useState, useCallback } from \"react\";\r\n\r\nimport LottoBoxComponent from \"./lotto-box/LottoBoxComponent\";\r\nimport styled from \"styled-components\";\r\n\r\nconst LottoRandomContentBox = styled.div`\r\n  width: 70%;\r\n  height: 1000px;\r\n  display: inline-block;\r\n  border-radius: 15px;\r\n  border: 2px solid lightgreen;\r\n  overflow: scroll;\r\n`;\r\n\r\nconst RandomButton = styled.button`\r\n  min-width: 100px;\r\n  font-size: 1rem;\r\n  padding: 1rem;\r\n  border-radius: 15px;\r\n  border: none;\r\n\r\n  color: white;\r\n  cursor: pointer;\r\n  background-color: lightblue;\r\n`;\r\n\r\nconst LottoRandomContent = () => {\r\n  const [lottoNumbers, setLottoNumbers] = useState([]);\r\n  const handleButtonClick = useCallback(() => {\r\n    const lottoNumber = [];\r\n    while (lottoNumber.length < 7) {\r\n      const newNumber = Math.floor(Math.random() * 45) + 1;\r\n\r\n      if (!lottoNumber.includes(newNumber)) {\r\n        lottoNumber.push(newNumber);\r\n      }\r\n    }\r\n\r\n    lottoNumber.sort((a, b)=>a-b)\r\n    setLottoNumbers([...lottoNumbers, lottoNumber]);\r\n  });\r\n\r\n  return (\r\n    <LottoRandomContentBox>\r\n      {lottoNumbers.map((lottoNumber, i) => (\r\n        <LottoBoxComponent key={i} lottoNumber={lottoNumber} />\r\n      ))}\r\n      <RandomButton onClick={handleButtonClick}>\r\n        Generate Random Numbers\r\n      </RandomButton>\r\n    </LottoRandomContentBox>\r\n  );\r\n};\r\n\r\nexport default LottoRandomContent;\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport * as axios from \"axios\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport styled from \"styled-components\";\r\n\r\nconst LottoChartContainer = styled.div`\r\n  margin-top: 50px;\r\n  text-align: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  border: 1px solid #aeaeae;\r\n  display: flex;\r\n  flex-direction: row;\r\n`;\r\n\r\nconst LottoChart = () => {\r\n  const today = new Date().toISOString();\r\n\r\n  const [lottoAll, setLottoAll] = useState(null);\r\n  const [fromDate, setFromDate] = useState(\"2002-12-07T00:00:00.000Z\");\r\n  const [toDate, setToDate] = useState(today);\r\n\r\n  const onChangeFrom = (e) => {\r\n    setFromDate(`${e.target.value}T00:00:00.000Z`);\r\n  };\r\n\r\n  const onChangeTo = (e) => {\r\n    setToDate(`${e.target.value}T23:59:59.000Z`);\r\n  };\r\n\r\n  const onClickCount = useCallback(async () => {\r\n    const range = {\r\n      from: fromDate,\r\n      to: toDate,\r\n    };\r\n    console.log(range);\r\n    const records = await axios.post(\r\n      \"http://localhost:5000/number-counts\",\r\n      range\r\n    );\r\n\r\n    console.log(records);\r\n    const sorted = records.data.sort((a, b) => b[1] - a[1]);\r\n    console.log(records.data);\r\n    setLottoAll(sorted);\r\n  }, [fromDate, toDate]);\r\n\r\n  let labels = [];\r\n  let counts = [];\r\n  if (lottoAll) {\r\n    labels = lottoAll.map((i) => i[0]);\r\n    counts = lottoAll.map((i) => i[1]);\r\n  }\r\n\r\n  const data = {\r\n    labels,\r\n    datasets: [\r\n      {\r\n        label: \"Lotto Numbers\",\r\n        data: counts,\r\n        backgroundColor: [\r\n          \"rgba(255, 99, 132, 0.2)\",\r\n          \"rgba(54, 162, 235, 0.2)\",\r\n          \"rgba(255, 206, 86, 0.2)\",\r\n          \"rgba(75, 192, 192, 0.2)\",\r\n          \"rgba(153, 102, 255, 0.2)\",\r\n          \"rgba(255, 159, 64, 0.2)\",\r\n        ],\r\n        borderColor: [\r\n          \"rgba(255, 99, 132, 1)\",\r\n          \"rgba(54, 162, 235, 1)\",\r\n          \"rgba(255, 206, 86, 1)\",\r\n          \"rgba(75, 192, 192, 1)\",\r\n          \"rgba(153, 102, 255, 1)\",\r\n          \"rgba(255, 159, 64, 1)\",\r\n        ],\r\n        borderWidth: 1,\r\n      },\r\n    ],\r\n  };\r\n  const options = { scales: { yAxes: [{ ticks: { beginAtZero: true } }] } };\r\n\r\n  return (\r\n    <>\r\n      <input\r\n        type=\"date\"\r\n        id=\"from\"\r\n        name=\"from\"\r\n        min=\"2002-12-07\"\r\n        onChange={onChangeFrom}\r\n      />\r\n      <input\r\n        type=\"date\"\r\n        id=\"to\"\r\n        name=\"to\"\r\n        min=\"2002-12-07\"\r\n        onChange={onChangeTo}\r\n      />\r\n      <button onClick={onClickCount}>Click! </button>\r\n      <LottoChartContainer>\r\n        <Bar data={data} options={options} />\r\n      </LottoChartContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LottoChart;\r\n","import React, { Component } from \"react\";\r\n\r\nimport LottoRandomHeader from \"./lotto/LottoRandomHeader\";\r\nimport LottoRandomContent from \"./lotto/LottoRandomContent\";\r\n\r\nimport styled from \"styled-components\";\r\nimport LottoChart from \"./lotto/LottoChart\";\r\n\r\nconst LottoRandomTemplateBox = styled.div`\r\n  margin: auto;\r\n  width: auto;\r\n  min-height: 100vh;\r\n\r\n  h1 {\r\n    text-align: center;\r\n  }\r\n`;\r\n\r\nconst LottoRandomMain = styled.div`\r\n  width: auto;\r\n\r\n  .side {\r\n    display: flex;\r\n  }\r\n`;\r\n\r\nclass LottoRandomTemplate extends Component {\r\n  render() {\r\n    return (\r\n      <LottoRandomTemplateBox>\r\n        <h1>Lotto for Fun!</h1>\r\n        <LottoRandomHeader />\r\n\r\n        <LottoRandomMain>\r\n          <h1> Random Generator </h1>\r\n\r\n          <LottoChart />\r\n          <div className=\"side\">\r\n            <LottoRandomContent />\r\n          </div>\r\n        </LottoRandomMain>\r\n      </LottoRandomTemplateBox>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LottoRandomTemplate;\r\n","import React, {Component} from 'react'\nimport LottoRandomTemplate from './components/LottoRandomTemplate'\n\nclass App extends Component {\n  render() {\n    return (\n    <div className=\"App\">\n      <LottoRandomTemplate/>\n    </div>\n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}